using System;
using System.IO;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using LibraryDTO;
using LibraryDAL;
using LibraryDAL.SCBLDataSetTableAdapters;
using LibraryDAL.SCBL2DataSetTableAdapters;
using LibraryDAL.SCBL3DataSetTableAdapters;
using LibraryDAL.FpiDataSetTableAdapters;
using LibraryDAL.ErpDataSetTableAdapters;
using LibraryDAL.AccDataSetTableAdapters;


public partial class frm_fpi_anal_map : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {
        clsStatic.MsgConfirmBox(btnadd, "Are you sure to update ?");
        clsStatic.CheckUserAuthentication();
        if (!Page.IsPostBack)
        {
            loaddata();
        }
    }

    private void MessageBoxShow(Page page, string message)
    {
        Literal ltr = new Literal();
        ltr.Text = @"<script type='text/javascript'> alert('" + message + "') </script>";
        page.Controls.Add(ltr);
    }

   
    protected void btnadd_Click(object sender, EventArgs e)
    {
        string costid = "";
        if (ddltype.SelectedItem.Text == "IC")
        {
            costid = "T06";
        }
        else if (ddltype.SelectedItem.Text == "LC")
        {
            costid = "T01";
        }
        else
        {
            return;
        }

        tbl_fpi_anal_mapTableAdapter anal = new tbl_fpi_anal_mapTableAdapter();
        AccCoaGroupCodeSetupTableAdapter acc = new AccCoaGroupCodeSetupTableAdapter();
        AccDataSet.AccCoaGroupCodeSetupDataTable dtacc = new AccDataSet.AccCoaGroupCodeSetupDataTable();
        try
        {
           
            foreach (GridViewRow gr in GridView1.Rows)
            {
                TextBox analysis = (TextBox)gr.FindControl("txt_analysis");
                dtacc = new AccDataSet.AccCoaGroupCodeSetupDataTable();
                dtacc = acc.GetDataByCodeId(analysis.Text.Split(':')[0], costid);
                if (dtacc.Rows.Count == 0)
                {
                    MessageBoxShow(this, "Please enter value");
                    return;
                }
            }

            anal.DeleteByMapType(ddltype.SelectedItem.Text);

            foreach (GridViewRow gr in GridView1.Rows)
            {
                Label code = (Label)gr.FindControl("lblcode");
                Label name = (Label)gr.FindControl("lblname");
                TextBox analysis = (TextBox)gr.FindControl("txt_analysis");
                if (analysis.Text == "")
                {
                    MessageBoxShow(this, "Please enter value");
                    return;
                }

                anal.InsertAnalMap(ddltype.SelectedItem.Text, code.Text, name.Text, analysis.Text.Split(':')[0].ToString(), dtacc[0].Ccg_Name, dtacc[0].Ccg_Cost_Id);
            }
        }
        catch(Exception ex)
        {
            string mess=ex.Message;
            MessageBoxShow(this, mess);
            return;
        }
        loaddata();
        MessageBoxShow(this, "Data Save Successfully");
      
    }
   

    private void loaddata()
    {
        string type = ddltype.SelectedItem.Text;
        tbldet.Visible = true ;
        InMa_Itm_DetTableAdapter itm = new InMa_Itm_DetTableAdapter();
        LibraryDAL.ErpDataSet.InMa_Itm_DetDataTable dtitm = new ErpDataSet.InMa_Itm_DetDataTable();
        tbl_fpi_anal_mapTableAdapter anal = new tbl_fpi_anal_mapTableAdapter();
        LibraryDAL.FpiDataSet.tbl_fpi_anal_mapDataTable dtanal = new FpiDataSet.tbl_fpi_anal_mapDataTable();

        AccCoaGroupCodeSetupTableAdapter party = new AccCoaGroupCodeSetupTableAdapter();
        LibraryDAL.AccDataSet.AccCoaGroupCodeSetupDataTable dtparty = new AccDataSet.AccCoaGroupCodeSetupDataTable();


        DataTable dt = new DataTable();
        dt.Columns.Add("Serial", typeof(Int32));
        dt.Columns.Add("Code", typeof(string));
        dt.Columns.Add("Name", typeof(string));

         int i = 0;

        if (type == "IC")
        {           
            dtitm = itm.GetDataByItmType("R");
             foreach (LibraryDAL.ErpDataSet.InMa_Itm_DetRow dr in dtitm.Rows)
            {
                i++;
                dt.Rows.Add(i, dr.Itm_Det_Sec_Code, dr.Itm_Det_desc);
            }
        } 
        else  if (type == "LC")
        {
            
            dtparty = party.GetDataByForLoanParty("T05", 1);
            foreach (AccDataSet.AccCoaGroupCodeSetupRow dr in dtparty.Rows)
            {
                i++;
                dt.Rows.Add(i, dr.Ccg_Code, dr.Ccg_Name);
            }
        }
        else
        {
             tbldet.Visible = false;
        }
         GridView1.DataSource = dt;
         GridView1.DataBind();

        for (int count = 0; count < GridView1.Rows.Count; count++)
        {
            Label lbl = (Label)GridView1.Rows[count].FindControl("lblsl");
            lbl.Text = (count + 1).ToString();
            Label code = (Label)GridView1.Rows[count].FindControl("lblcode");
            Label name = (Label)GridView1.Rows[count].FindControl("lblname");

            if (type == "IC")
            {
                code.Text = dtitm[count].Itm_Det_Icode;
                name.Text = dtitm[count].Itm_Det_desc;
            }
            else
            {
                code.Text  = dtparty[count].Ccg_Code;
                name.Text = dtparty[count].Ccg_Name;
            }

            TextBox codedet = (TextBox)GridView1.Rows[count].FindControl("txt_analysis");
            dtanal = new FpiDataSet.tbl_fpi_anal_mapDataTable();
            dtanal = anal.GetDataByMapCode(code.Text);

            if (dtanal.Rows.Count > 0)
            {
                if (dtanal[0].Isanal_codeNull() || dtanal[0].Isanal_nameNull() || dtanal[0].Isanal_grpNull())
                {
                    codedet.Text = "";
                }
                else
                {
                    codedet.Text = dtanal[0].anal_code.Trim() + ":" + dtanal[0].anal_name.Trim() + ":" + dtanal[0].anal_grp.Trim();
                }
            }
            else
            {
                codedet.Text = "";
            }
            AjaxControlToolkit.AutoCompleteExtender ac = (AjaxControlToolkit.AutoCompleteExtender)GridView1.Rows[count].FindControl("txt_analysis_AutoCompleteExtender");

            if (type == "IC")
            {
                ac.ContextKey = "T06";
            }
            else if (type == "LC")
            {
                ac.ContextKey = "T01";
            }
        }
    }

    protected void ddltype_SelectedIndexChanged(object sender, EventArgs e)
    {
        loaddata();
    }
}


   




