using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;
using LibraryDAL;
using LibraryDTO;
using LibraryDAL.SCBLQryTableAdapters;
using LibraryDAL.SCBLDataSetTableAdapters;
using LibraryDAL.SCBL2DataSetTableAdapters;
using LibraryDAL.ErpDataSetTableAdapters;
using LibraryDAL.SCBLINTableAdapters;
using LibraryDAL.AccDataSetTableAdapters;
using LibraryDAL.ProdDataSetTableAdapters;

public partial class frm_prod_itm_map : System.Web.UI.Page
{  

    protected void Page_Load(object sender, EventArgs e)
    {
        clsStatic.CheckUserAuthentication();
        clsStatic.MsgConfirmBox(btnUpdate, "Are you sure to update?");
        tblmaster.BgColor = "FFFFFFF";
       
        if (!Page.IsPostBack)
        {
           
           
           
            get_all_prod();
            gdItem.Visible = false;
            lblmsg.Visible = false;
            btnUpdate.Visible = false;
        }
        else
        {

        }
    }

    private void get_all_prod() 
    {
        tbl_prod_nameTableAdapter pro = new tbl_prod_nameTableAdapter();
        ProdDataSet.tbl_prod_nameDataTable dtpro = new ProdDataSet.tbl_prod_nameDataTable();
        ListItem lst;
        dtpro = pro.GetAllProd();

        ddlprod.Items.Clear();
        ddlprod.Items.Add("");

        foreach (ProdDataSet.tbl_prod_nameRow dr in dtpro.Rows)
        {
            lst = new ListItem();
            lst.Text = dr.prod_id + ":" + dr.prod_name;
            lst.Value = dr.prod_id + ":" + dr.prod_type;
            ddlprod.Items.Add(lst);
        }

    }
    
   

   
    private void generate_data()
    {        
        string prodid = ddlprod.SelectedValue.ToString();
        lblmsg.Visible = false;
                
        if (prodid == "")
        {         
            gdItem.Visible = false;           
            btnUpdate.Visible = false;
            return;
        }

        prodid = prodid.Split(':')[0];

        gdItem.Visible = true;
       
        btnUpdate.Visible = true;
        InMa_Itm_DetTableAdapter itm = new InMa_Itm_DetTableAdapter();
        ErpDataSet.InMa_Itm_DetDataTable dtitm = new ErpDataSet.InMa_Itm_DetDataTable();

        tbl_prod_itm_mapTableAdapter map = new tbl_prod_itm_mapTableAdapter();
        ProdDataSet.tbl_prod_itm_mapDataTable dtmap = new ProdDataSet.tbl_prod_itm_mapDataTable();


        dtitm = itm.GetAllForPr("F,R,P");

        gdItem.DataSource = dtitm;
        gdItem.DataBind();

        string icode;
        CheckBox chkrm, chkfinn;
        TextBox txtcode, txtratio;
        Label lblitmtype;

        foreach (GridViewRow gr in gdItem.Rows)
        {


            icode = gr.Cells[0].Text.Trim();
            lblitmtype = new Label();
            chkrm = new CheckBox();
            chkfinn = new CheckBox();
            txtcode = new TextBox();
            txtratio = new TextBox();
            

            lblitmtype = (Label)gr.FindControl("Label1");
            chkrm = (CheckBox)gr.FindControl("CheckBox1");
            chkfinn = (CheckBox)gr.FindControl("CheckBox2");            
            txtcode = (TextBox)gr.FindControl("TextBox1");
            txtratio = (TextBox)gr.FindControl("TextBox2");


             switch (gr.Cells[3].Text.Trim())
            { 

                 case "F":
                    lblitmtype.Text = "Finish Goods";
                     break;

                 case "S":
                     lblitmtype.Text = "Spare";
                     break;
                 case "R":
                     lblitmtype.Text = "Raw Material";
                     break;
                 case "P":
                     lblitmtype.Text = "Process Material";
                     break;

                 case "K":
                     lblitmtype.Text = "Packing Material";
                     break;
                                         

                 default:
                     lblitmtype.Text = "Not Assigned";
                     break;


            }


            dtmap = new ProdDataSet.tbl_prod_itm_mapDataTable();
            dtmap = map.GetDataByItmProd(icode, prodid);
            if (dtmap.Count == 0)
            {
                chkrm.Checked = false;
                chkfinn.Checked = false;
                txtcode.Text = "";
                txtratio.Text = "";
                
            }
            else
            {
                if (dtmap[0].rm_status == 1) { chkrm.Checked = true; } else { chkrm.Checked = false; }
                if (dtmap[0].finn_status == 1) { chkfinn.Checked = true; } else { chkfinn.Checked = false; }                
                txtcode.Text = dtmap[0].coa_code;
                txtratio.Text = dtmap[0].Isprod_std_ratioNull() ? "" : dtmap[0].prod_std_ratio.ToString("N2"); ;
                
            }
        }
       
    }


    

  

    protected void ddlprod_SelectedIndexChanged(object sender, EventArgs e)
    {
        generate_data();
    }
    protected void btnUpdate_Click(object sender, EventArgs e)
    {
        string prodid = ddlprod.SelectedValue.ToString();

        if (prodid == "")
        {
            gdItem.Visible = false;
            lblmsg.Visible = false;
            btnUpdate.Visible = false;
            return;
        }
        prodid = ddlprod.SelectedValue.ToString().Split(':')[0];
        string prod_type = ddlprod.SelectedValue.ToString().Split(':')[1];
        string prodname = ddlprod.SelectedItem.Text.ToString().Split(':')[1];


        string icode, ccode = "", opcl = "";
        Nullable<decimal> ratio = null;

        CheckBox chkrm, chkfinn;
        TextBox txtcode, txtratio;
        Label lblitmtype;
        tbl_prod_itm_mapTableAdapter map = new tbl_prod_itm_mapTableAdapter();
        ProdDataSet.tbl_prod_itm_mapDataTable dtmap = new ProdDataSet.tbl_prod_itm_mapDataTable();
        budgTableAdapter bud = new budgTableAdapter();


        // check finnish items
        int fcnt = 0, rmcnt = 0;
        decimal ratcnt = 0;

        foreach (GridViewRow gr in gdItem.Rows)
        {
            chkrm = new CheckBox();
            chkfinn = new CheckBox();
            txtcode = new TextBox();
            txtratio = new TextBox();

            chkrm = (CheckBox)gr.FindControl("CheckBox1");
            chkfinn = (CheckBox)gr.FindControl("CheckBox2");
            txtcode = (TextBox)gr.FindControl("TextBox1");
            txtratio = (TextBox)gr.FindControl("TextBox2");

            if (chkrm.Checked)
            {
                rmcnt++;

                if (txtcode.Text.Length > 14)
                {
                    ccode = txtcode.Text.Substring(0, 15);
                    if (bud.GetDataByCoaCode(ccode).Count == 0) 
                    {
                        lblmsg.Text = "RAW MATERIAL DBT CODE NOT ASSIGNED";
                        lblmsg.ForeColor = System.Drawing.Color.Red;
                        lblmsg.Visible = true;
                        return;
                
                    }

                }
                else
                {
                    lblmsg.Text = "RAW MATERIAL DBT CODE NOT ASSIGNED";
                    lblmsg.ForeColor = System.Drawing.Color.Red;
                    lblmsg.Visible = true;
                    return;
                
                }


                if ((prod_type == "B") && (txtratio.Text == ""))
                {
                    lblmsg.Text = "STANDARD RATIO NOT ASSIGNED";
                    lblmsg.ForeColor = System.Drawing.Color.Red;
                    lblmsg.Visible = true;
                    return;
                }

                

            }
            if (chkfinn.Checked) fcnt++;
            if (txtratio.Text != "") ratcnt += Convert.ToDecimal(txtratio.Text);
            
        }

        if (rmcnt == 0)
        {
            lblmsg.Text = "RAW MATERIAL NOT ASSIGNED";
            lblmsg.ForeColor = System.Drawing.Color.Red;
            lblmsg.Visible = true;
            return;
        }

        if (fcnt != 1)
        {
            lblmsg.Text = "PLEASE ASSIGN ONLY SINGLE FINISH GOODS";
            lblmsg.ForeColor = System.Drawing.Color.Red;
            lblmsg.Visible = true;
            return;
        }
        
        if ((prod_type == "B") && (ratcnt != 100))
        {
            lblmsg.Text = "TOTAL PRODUCTION RATIO SHOULD BE 100";
            lblmsg.ForeColor = System.Drawing.Color.Red;
            lblmsg.Visible = true;
            return;
        }
        

         SqlTransaction myTrn = HelperTA.OpenTransaction(map.Connection);
        
        try
         {
             map.AttachTransaction(myTrn);

             map.DeleteByProdId(prodid);

             foreach (GridViewRow gr in gdItem.Rows)
             {
                 icode = gr.Cells[0].Text.Trim();

                 lblitmtype = new Label();
                 chkrm = new CheckBox();
                 chkfinn = new CheckBox();
                 txtcode = new TextBox();
                 txtratio = new TextBox();

                 lblitmtype = (Label)gr.FindControl("Label1");
                 chkrm = (CheckBox)gr.FindControl("CheckBox1");
                 chkfinn = (CheckBox)gr.FindControl("CheckBox2");
                 txtcode = (TextBox)gr.FindControl("TextBox1");
                 txtratio = (TextBox)gr.FindControl("TextBox2");


                 if (txtcode.Text.Length > 14)
                 {
                     ccode = txtcode.Text.Substring(0, 15);
                     if (bud.GetDataByCoaCode(ccode).Count == 0) { ccode = ""; }

                 }
                 else
                 {
                     ccode = "";
                 }

                 if (txtratio.Text != "")
                 {
                     ratio = Convert.ToDecimal(txtratio.Text);
                 }
                 else
                 {
                     ratio = null;
                 }
                 

                 if ((chkrm.Checked) || (chkfinn.Checked))
                 {
                     map.InsertItmMap(icode, gr.Cells[1].Text.Trim(), gr.Cells[3].Text.Trim(), lblitmtype.Text, gr.Cells[2].Text.Trim(), prodid, prodname, (chkrm.Checked ? 1 : 0), (chkfinn.Checked ? 1 : 0), 0, ccode, opcl, ratio);
                 }
             }
            
            myTrn.Commit();       
           
        }
        catch (Exception ex)
        {
            myTrn.Rollback();
            
        }
        finally
        {
            HelperTA.CloseTransaction(map.Connection, myTrn);           
        }


        generate_data();

        lblmsg.Text = "UPDATED SUCCESSFULLY";
        lblmsg.ForeColor = System.Drawing.Color.Blue;
        lblmsg.Visible = true;
    }
    protected void gdItem_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        try
        {
            if (ddlprod.SelectedValue.Split(':')[1] == "P")
            {
                e.Row.Cells[8].Visible = false;
            }
            else
            {
                e.Row.Cells[8].Visible = true;
            }
        }
        catch
        { }
    }
}
